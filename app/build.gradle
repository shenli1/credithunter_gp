apply plugin: "com.android.application"

import java.text.SimpleDateFormat

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */

def keystorePropertiesFile = rootProject.file("./keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def fbAppId = '844108212634446'
def accountKitClientToken = '534b8fa46ae5c5f34bbc73444452dacd'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionName "1.0.0"
        applicationId "id.kreditkuda.pro"
        versionCode 1

        buildConfigField "String[]", "ACCOUNTKIT_COUNTRY_WHITE_LIST", "{\"ID\"}"
        buildConfigField('String', 'BUGGLY_APP_ID', '\"YOURBUGLYID\"')
//        buildConfigField 'String', 'H5_BASE_URL', '\"https://www.data.dompetcash123.com/\"'
//        buildConfigField 'String', 'H5_BASE_URL', '\"https://www.loan.dompetcash456.com/\"'
        buildConfigField 'String', 'H5_BASE_URL', '\"http://www.pemburukredit.com/\"'
//        buildConfigField 'String', 'PORTAL_API_BASE', '\"https://api.rest.dompetcash123.com/\"'
//        buildConfigField 'String', 'PORTAL_API_BASE', '\"https://a.b.c.d.dompetcash456.com/\"'
        buildConfigField 'String', 'PORTAL_API_BASE', '\"http://rest.api.credithunter.app/\"'
        buildConfigField 'String', 'PRIVACY_POLICY_PATH', '\"policy"'
        buildConfigField 'String', 'USER_POLICY_PATH', '\"services-user-terms.html"'
        buildConfigField 'String', 'POINT_QA_PATH', '\"bonus-point.html\"'
        buildConfigField 'String', 'APK_NAME', '\"uangtas.apk\"'
        buildConfigField 'String', 'CHANNEL', '\"uangtas\"'

        resValue('string', 'app_name', "Kredit Kuda")

        resValue('string', 'FACEBOOK_APP_ID', fbAppId)
        resValue('string', 'facebook_app_id', fbAppId)
        resValue('string', 'ACCOUNT_KIT_CLIENT_TOKEN', accountKitClientToken)

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true

        resConfigs "in"

//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main.jniLibs.srcDirs = ['libs']
        androidTest {

        }
    }
    dexOptions {
        preDexLibraries = false
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            useProguard true
            //Zipalign优化
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"


            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def path = ""
                    def outputFile = output.outputFile
                    def fileName = outputFile.name.replace("-", "_")
                            .replace("app", "app_${variant.name}")
                            .replace("release.apk", "_v${variant.versionName}_${new SimpleDateFormat("yyyy-MM-dd").format(new Date())}_${variant.versionCode}_release.apk")
                    output.outputFileName = new File(path + fileName)
                }
            }
        }
        debug {
            debuggable true
            minifyEnabled false
            useProguard false
            zipAlignEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

//            buildConfigField 'String', 'PORTAL_API_BASE', '\"http://128.1.0.70:8088/\"'
        }
    }

    // Warning:Conflict with dependency 'com.google.code.findbugs:jsr305'. Resolved versions for app (3.0.1) and test app (2.0.1) differ.
    // http://stackoverflow.com/questions/37347326/errorconflict-with-dependency-com-google-code-findbugsjsr305
    configurations.all {
        resolutionStrategy.force 'com.googlue.code.findbugs:jsr305:1.3.9'
    }

    flavorDimensions "default"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
repositories {
    mavenCentral()
}
dependencies {
    // Appsflyer
    implementation 'com.appsflyer:af-android-sdk:4.9.0'
    implementation 'com.android.installreferrer:installreferrer:1.0'
    // Firebase dependency, be consistent with facebook accountkit: 4.32.0
//    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseVersion"
//    implementation "com.google.firebase:firebase-messaging:$rootProject.ext.firebaseVersion"

    // for facebook account kit's dependency
    implementation "com.google.android.gms:play-services-auth-api-phone:$rootProject.ext.gmsVersion"
    implementation "com.google.android.gms:play-services-auth:$rootProject.ext.gmsVersion"

    // Crashlytics (also needs: firebase-core)
    // !!! DO NOT use firebase, it uploads map file to firebase server &
    // is suspicious to cause google play account linkage
//    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
//        transitive = true
//    }
//    implementation "com.google.firebase:firebase-config:$rootProject.ext.firebaseVersion"

    // google referral API
    // https://developer.android.google.cn/google/play/installreferrer/library
//    implementation 'com.android.installreferrer:installreferrer:1.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    // to replace facebook sdk's cardview-v7:27.0.2.
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"

    // rxjava2
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjavaVersion"

    // facebook account kit
    implementation("com.facebook.android:account-kit-sdk:$rootProject.ext.fbSDKVersion") {
        exclude group: 'com.google.android.gms', module: 'play-services-auth-api-phone'
        exclude group: 'com.google.android.gms', module: 'play-services-auth'
    }

    // facebook share
    implementation("com.facebook.android:facebook-share:$rootProject.ext.fbSDKVersion") {
        exclude group: "com.android.support", module: "customtabs"
        exclude group: "com.android.support", module: "cardview"
    }

    // okhttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"

    // rx lifecycle
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rootProject.ext.rxlifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rootProject.ext.rxlifecycleVersion"
    implementation 'com.android.support:multidex:1.0.3'
    // RxBus
    implementation('com.hwangjr.rxbus:rxbus:2.0.0') {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    }

    // rx permissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'


    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // jackson
    implementation "com.fasterxml.jackson.core:jackson-core:$rootProject.ext.jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$rootProject.ext.jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$rootProject.ext.jacksonVersion"

    // smart refresh
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-5'

    // glide
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"

    // android-gif-drawable
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.12'

    // banner
    implementation 'com.bigkoo:ConvenientBanner:2.1.2'

    // leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakCanaryVersion"
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // test
//    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    testImplementation 'junit:junit:4.12'
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
//apply plugin: 'com.google.gms.google-services'
